{
  "id": "statistical_analysis_2",
  "title": "假设检验",
  "description": "常见的统计假设检验方法示例",
  "code": "import numpy as np\nfrom scipy import stats\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# 设置中文显示\nplt.rcParams['font.sans-serif'] = ['SimHei']\nplt.rcParams['axes.unicode_minus'] = False\n\n# 创建示例数据\nnp.random.seed(42)\n\n# 1. 单样本t检验\n# 假设：某班级的考试成绩均值是否显著不同于75分\nscores = np.random.normal(78, 10, 30)  # 30个学生的成绩\n\nprint('1. 单样本t检验')\nprint('原假设：总体均值等于75')\nprint('备择假设：总体均值不等于75')\nt_stat, p_value = stats.ttest_1samp(scores, 75)\nprint(f't统计量: {t_stat:.4f}')\nprint(f'p值: {p_value:.4f}')\nprint(f'结论: {\\'拒绝原假设\\' if p_value < 0.05 else \\'未能拒绝原假设\\'}')\n\n# 2. 独立样本t检验\n# 假设：两个班级的考试成绩是否有显著差异\nclass1_scores = np.random.normal(75, 10, 30)  # 班级1的成绩\nclass2_scores = np.random.normal(80, 10, 30)  # 班级2的成绩\n\nprint('\\n2. 独立样本t检验')\nprint('原假设：两个总体均值相等')\nprint('备择假设：两个总体均值不相等')\nt_stat, p_value = stats.ttest_ind(class1_scores, class2_scores)\nprint(f't统计量: {t_stat:.4f}')\nprint(f'p值: {p_value:.4f}')\nprint(f'结论: {\\'拒绝原假设\\' if p_value < 0.05 else \\'未能拒绝原假设\\'}')\n\n# 可视化两组数据\nplt.figure(figsize=(10, 4))\nsns.boxplot(data=[class1_scores, class2_scores], width=0.5)\nplt.xticks([0, 1], ['班级1', '班级2'])\nplt.title('两个班级成绩的箱线图比较')\nplt.show()\n\n# 3. 配对样本t检验\n# 假设：同一组学生在培训前后的成绩是否有显著差异\npre_scores = np.random.normal(70, 10, 25)  # 培训前成绩\npost_scores = pre_scores + np.random.normal(5, 5, 25)  # 培训后成绩（假设有提升）\n\nprint('\\n3. 配对样本t检验')\nprint('原假设：培训前后的平均分数差异为0')\nprint('备择假设：培训前后的平均分数差异不为0')\nt_stat, p_value = stats.ttest_rel(pre_scores, post_scores)\nprint(f't统计量: {t_stat:.4f}')\nprint(f'p值: {p_value:.4f}')\nprint(f'结论: {\\'拒绝原假设\\' if p_value < 0.05 else \\'未能拒绝原假设\\'}')\n\n# 4. 方差分析（ANOVA）\n# 假设：三个不同教学方法的效果是否有显著差异\nmethod1_scores = np.random.normal(75, 10, 20)\nmethod2_scores = np.random.normal(80, 10, 20)\nmethod3_scores = np.random.normal(85, 10, 20)\n\nprint('\\n4. 单因素方差分析')\nprint('原假设：所有组的均值相等')\nprint('备择假设：至少有一组的均值与其他组不同')\nf_stat, p_value = stats.f_oneway(method1_scores, method2_scores, method3_scores)\nprint(f'F统计量: {f_stat:.4f}')\nprint(f'p值: {p_value:.4f}')\nprint(f'结论: {\\'拒绝原假设\\' if p_value < 0.05 else \\'未能拒绝原假设\\'}')\n\n# 5. 卡方检验\n# 假设：学习方法的选择与成绩等级是否相关\ncontingency_table = pd.DataFrame({\n    '优秀': [10, 15, 20],\n    '良好': [20, 25, 15],\n    '及格': [15, 10, 10],\n    '不及格': [5, 0, 5]\n}, index=['方法A', '方法B', '方法C'])\n\nprint('\\n5. 卡方独立性检验')\nprint('原假设：学习方法的选择与成绩等级独立')\nprint('备择假设：学习方法的选择与成绩等级不独立')\nchi2, p_value, dof, expected = stats.chi2_contingency(contingency_table)\nprint(f'卡方统计量: {chi2:.4f}')\nprint(f'p值: {p_value:.4f}')\nprint(f'自由度: {dof}')\nprint(f'结论: {\\'拒绝原假设\\' if p_value < 0.05 else \\'未能拒绝原假设\\'}')\n\n# 6. 正态性检验\nprint('\\n6. Shapiro-Wilk正态性检验')\nprint('原假设：数据服从正态分布')\nprint('备择假设：数据不服从正态分布')\nstat, p_value = stats.shapiro(scores)\nprint(f'统计量: {stat:.4f}')\nprint(f'p值: {p_value:.4f}')\nprint(f'结论: {\\'拒绝原假设\\' if p_value < 0.05 else \\'未能拒绝原假设\\'}\\n')\n\n# 7. 相关性检验\n# 假设：学习时间与成绩是否相关\nstudy_time = np.random.normal(4, 1, 30)  # 学习时间（小时）\ntest_scores = study_time * 10 + np.random.normal(50, 10, 30)  # 考试成绩\n\nprint('7. Pearson相关系数检验')\nprint('原假设：两个变量之间没有线性相关关系')\nprint('备择假设：两个变量之间存在线性相关关系')\nr, p_value = stats.pearsonr(study_time, test_scores)\nprint(f'相关系数: {r:.4f}')\nprint(f'p值: {p_value:.4f}')\nprint(f'结论: {\\'拒绝原假设\\' if p_value < 0.05 else \\'未能拒绝原假设\\'}\\n')\n\n# 可视化相关性\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x=study_time, y=test_scores)\nplt.xlabel('学习时间（小时）')\nplt.ylabel('考试成绩')\nplt.title('学习时间与考试成绩的散点图')\nplt.show()",
  "category_id": "statistical_analysis",
  "tags": ["统计分析", "假设检验", "统计推断"],
  "use_count": 0,
  "created_at": "2024-01-23T00:00:00",
  "updated_at": "2024-01-23T00:00:00"
} 