{
  "id": "data_visualization_1",
  "title": "Matplotlib基础绘图",
  "description": "使用Matplotlib进行基础数据可视化",
  "code": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# 设置中文显示\nplt.rcParams['font.sans-serif'] = ['SimHei']\nplt.rcParams['axes.unicode_minus'] = False\n\n# 创建示例数据\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.exp(-x/5)\n\n# 1. 基础线图\nplt.figure(figsize=(12, 8))\n\n# 绘制三条线\nplt.plot(x, y1, label='sin(x)', color='blue', linestyle='-')\nplt.plot(x, y2, label='cos(x)', color='red', linestyle='--')\nplt.plot(x, y3, label='exp(-x/5)', color='green', linestyle=':')\n\n# 添加标题和标签\nplt.title('基础线图示例')\nplt.xlabel('X轴')\nplt.ylabel('Y轴')\nplt.legend()\nplt.grid(True)\nplt.show()\n\n# 2. 子图布局\nplt.figure(figsize=(12, 8))\n\n# 2x2布局的子图\n# 第一个子图：线图\nplt.subplot(2, 2, 1)\nplt.plot(x, y1)\nplt.title('正弦函数')\nplt.grid(True)\n\n# 第二个子图：散点图\nplt.subplot(2, 2, 2)\nplt.scatter(x[::5], y2[::5], c='red', s=50)\nplt.title('余弦函数散点图')\n\n# 第三个子图：柱状图\nplt.subplot(2, 2, 3)\ndata = [15, 25, 30, 35, 20]\ncategories = ['A', 'B', 'C', 'D', 'E']\nplt.bar(categories, data)\nplt.title('柱状图')\n\n# 第四个子图：饼图\nplt.subplot(2, 2, 4)\nplt.pie(data, labels=categories, autopct='%1.1f%%')\nplt.title('饼图')\n\nplt.tight_layout()\nplt.show()\n\n# 3. 高级样式设置\nplt.figure(figsize=(12, 6))\n\n# 创建渐变色散点图\nn_points = 100\nx = np.random.normal(0, 1, n_points)\ny = np.random.normal(0, 1, n_points)\ncolors = np.random.rand(n_points)\nsizes = np.random.rand(n_points) * 500\n\nplt.scatter(x, y, c=colors, s=sizes, alpha=0.5, cmap='viridis')\nplt.colorbar(label='颜色值')\n\nplt.title('渐变色散点图')\nplt.xlabel('X轴')\nplt.ylabel('Y轴')\n\n# 添加文本注释\nplt.annotate('重要点', xy=(1, 1), xytext=(2, 2),\n             arrowprops=dict(facecolor='black', shrink=0.05))\n\nplt.grid(True, linestyle='--', alpha=0.7)\nplt.show()\n\n# 4. 3D图表\nfrom mpl_toolkits.mplot3d import Axes3D\n\nfig = plt.figure(figsize=(10, 7))\nax = fig.add_subplot(111, projection='3d')\n\n# 创建3D数据\nx = np.linspace(-5, 5, 100)\ny = np.linspace(-5, 5, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\n\n# 绘制3D表面\nsurf = ax.plot_surface(X, Y, Z, cmap='coolwarm')\n\n# 添加颜色条\nplt.colorbar(surf)\n\n# 设置标签\nax.set_xlabel('X轴')\nax.set_ylabel('Y轴')\nax.set_zlabel('Z轴')\nax.set_title('3D表面图')\n\nplt.show()",
  "category_id": "data_visualization",
  "tags": ["matplotlib", "数据可视化", "基础绘图"],
  "use_count": 0,
  "created_at": "2024-01-23T00:00:00",
  "updated_at": "2024-01-23T00:00:00"
} 