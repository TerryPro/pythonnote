{
  "id": "time_series_1",
  "title": "时间序列基础分析",
  "description": "使用Python进行时间序列数据的基础分析",
  "code": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime, timedelta\n\n# 设置中文显示\nplt.rcParams['font.sans-serif'] = ['SimHei']\nplt.rcParams['axes.unicode_minus'] = False\n\n# 创建示例时间序列数据\ndates = pd.date_range(start='2023-01-01', end='2023-12-31', freq='D')\nvalues = np.random.normal(100, 10, len(dates)) + \\\n         np.sin(np.arange(len(dates)) * 2 * np.pi / 365) * 20  # 添加季节性\n\n# 创建时间序列DataFrame\ndf = pd.DataFrame({\n    'date': dates,\n    'value': values\n})\ndf.set_index('date', inplace=True)\n\n# 1. 基本时间序列操作\nprint('基本时间序列信息：')\nprint(df.head())\nprint('\\n时间序列基本统计：')\nprint(df.describe())\n\n# 2. 时间序列重采样\n# 按月重采样\nmonthly = df.resample('M').mean()\nprint('\\n月度数据：')\nprint(monthly.head())\n\n# 按周重采样\nweekly = df.resample('W').mean()\nprint('\\n周度数据：')\nprint(weekly.head())\n\n# 3. 移动平均\n# 计算不同窗口的移动平均\ndf['MA7'] = df['value'].rolling(window=7).mean()  # 7天移动平均\ndf['MA30'] = df['value'].rolling(window=30).mean()  # 30天移动平均\n\n# 可视化原始数据和移动平均\nplt.figure(figsize=(12, 6))\nplt.plot(df.index, df['value'], label='原始数据', alpha=0.5)\nplt.plot(df.index, df['MA7'], label='7天移动平均')\nplt.plot(df.index, df['MA30'], label='30天移动平均')\nplt.title('时间序列数据及其移动平均')\nplt.xlabel('日期')\nplt.ylabel('值')\nplt.legend()\nplt.grid(True)\nplt.show()\n\n# 4. 时间序列分解\n# 添加一些趋势和噪声\ndf['trend'] = np.linspace(0, 20, len(df))  # 线性趋势\ndf['seasonal'] = np.sin(np.arange(len(df)) * 2 * np.pi / 365) * 20  # 季节性\ndf['noise'] = np.random.normal(0, 5, len(df))  # 随机噪声\ndf['combined'] = df['trend'] + df['seasonal'] + df['noise']\n\n# 可视化分解结果\nplt.figure(figsize=(12, 10))\n\nplt.subplot(411)\nplt.plot(df.index, df['combined'])\nplt.title('组合时间序列')\nplt.grid(True)\n\nplt.subplot(412)\nplt.plot(df.index, df['trend'])\nplt.title('趋势成分')\nplt.grid(True)\n\nplt.subplot(413)\nplt.plot(df.index, df['seasonal'])\nplt.title('季节性成分')\nplt.grid(True)\n\nplt.subplot(414)\nplt.plot(df.index, df['noise'])\nplt.title('随机噪声成分')\nplt.grid(True)\n\nplt.tight_layout()\nplt.show()\n\n# 5. 基本统计分析\n# 按月统计\nmonthly_stats = df.groupby(df.index.month)['value'].agg(['mean', 'std', 'min', 'max'])\nprint('\\n月度统计：')\nprint(monthly_stats)\n\n# 按星期几统计\nweekday_stats = df.groupby(df.index.dayofweek)['value'].agg(['mean', 'std', 'min', 'max'])\nprint('\\n星期统计：')\nprint(weekday_stats)\n\n# 6. 时间序列可视化\n# 箱线图显示月度分布\nplt.figure(figsize=(12, 6))\nsns.boxplot(x=df.index.month, y=df['value'])\nplt.title('月度值分布')\nplt.xlabel('月份')\nplt.ylabel('值')\nplt.show()\n\n# 热力图显示日历图\npivot_table = df.pivot_table(\n    index=df.index.isocalendar().week,\n    columns=df.index.dayofweek,\n    values='value',\n    aggfunc='mean'\n)\n\nplt.figure(figsize=(12, 8))\nsns.heatmap(pivot_table, cmap='YlOrRd')\nplt.title('时间序列日历热力图')\nplt.xlabel('星期几')\nplt.ylabel('周数')\nplt.show()",
  "category_id": "time_series",
  "tags": ["时间序列", "数据分析", "pandas"],
  "use_count": 0,
  "created_at": "2024-01-23T00:00:00",
  "updated_at": "2024-01-23T00:00:00"
} 